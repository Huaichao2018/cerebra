language: python

services:
  - docker

matrix:
  include:

    - os: linux
      python: "3.6"
      install:
        - pip3 install -r requirements.txt 
        - pip3 install -r test_requirements.txt
        - pip3 install .

    - os: linux
      python: "3.7"
      install:
        - pip3 install -r requirements.txt 
        - pip3 install -r test_requirements.txt
        - pip3 install .

    - os: linux
      python: "3.8"
      install:
        - pip3 install -r requirements.txt 
        - pip3 install -r test_requirements.txt
        - pip3 install .

    - os: linux
      python: "3.7"
      before_install:
        - docker pull lincolnharris/cerebra
        - docker run -it lincolnharris/cerebra
        - cd cerebra


    # - os: linux
    #   python: "3.8-dev"
    #   install:
    #     - pip3 install -r requirements.txt 
    #     - pip3 install -r test_requirements.txt
    #     - pip3 install .

    # - os: linux
    #   python: "3.9-dev"
    #   install:
    #     - pip3 install -r requirements.txt 
    #     - pip3 install -r test_requirements.txt
    #     - pip3 install .

    # - os: linux
    #   python: "pypy3"
    #   install:
    #     - pip3 install -r requirements.txt 
    #     - pip3 install -r test_requirements.txt
    #     - pip3 install .
    
    # - name: "Python 3.6.6 OSX"
    #   os: osx
    #   language: generic
    #   env: PYTHON=3.6.6'
    #   before_install:
    #     - brew update
    #     - brew install openssl
    #     - brew install zlib
    #     - brew outdated pyenv || brew upgrade pyenv
    #     - brew install pyenv-virtualenv
    #     - pyenv install 3.6.6
    #     - export PYENV_VERSION=3.6.6
    #     - export PATH="/Users/travis/.pyenv/shims:${PATH}"
    #     - pyenv virtualenv venv
    #     - source /Users/travis/.pyenv/versions/venv/bin/activate
    #     - python --version
    #   install:
    #     - python -m pip install -U pip
    #     - sudo pip install setuptools
    #     - sudo pip install -r requirements.txt -e .
    #     - sudo pip install -r test_requirements.txt -e .

    # - name: "Python 3.7.7 OSX"
    #   os: osx
    #   language: generic
    #   env: PYTHON=3.7.7'
    #   before_install:
    #     - brew update
    #     - brew install openssl
    #     - brew install zlib
    #     - brew outdated pyenv || brew upgrade pyenv
    #     - brew install pyenv-virtualenv
    #     - pyenv install 3.7.7
    #     - export PYENV_VERSION=3.7.7
    #     - export PATH="/Users/travis/.pyenv/shims:${PATH}"
    #     - pyenv virtualenv venv
    #     - source /Users/travis/.pyenv/versions/venv/bin/activate
    #     - python --version
    #   install:
    #     - python -m pip install -U pip
    #     - sudo pip install setuptools
    #     - sudo pip install -r requirements.txt -e .
    #     - sudo pip install -r test_requirements.txt -e .

    # - name: "Python 3.8.2 OSX"
    #   os: osx
    #   language: generic
    #   env: PYTHON=3.8.2'
    #   before_install:
    #     - brew update
    #     - brew install openssl
    #     - brew install zlib
    #     - brew outdated pyenv || brew upgrade pyenv
    #     - brew install pyenv-virtualenv
    #     - pyenv install 3.8.2
    #     - export PYENV_VERSION=3.8.2
    #     - export PATH="/Users/travis/.pyenv/shims:${PATH}"
    #     - pyenv virtualenv venv
    #     - source /Users/travis/.pyenv/versions/venv/bin/activate
    #     - python --version
    #   install:
    #     - python -m pip install -U pip
    #     - sudo pip install setuptools
    #     - sudo pip install -r requirements.txt -e .
    #     - sudo pip install -r test_requirements.txt -e .

    # - name: "Python 3.8.0 Windows"
    #   os: windows                 
    #   language: shell       
    #   before_install:
    #     - choco install python --version 3.8.0
    #     - python -m pip install --upgrade pip
    #   env: PATH=/c/Python38:/c/Python38/Scripts:$PATH
    #   install:
    #     - python -m pip install -U pip # maybe dont need this
    #     - pip install setuptools
    #     - pip install -r requirements.txt -e .
    #     - pip install -r test_requirements.txt -e .

  # allow_failures:
  #   - python: "3.8-dev"
  #   - python: "3.9-dev"
  #   - python: "pypy3"
  #   - os: windows

script:
    - make test
    - make coverage
    - make lint

after_script:
    - pip3 install codecov
    - codecov
